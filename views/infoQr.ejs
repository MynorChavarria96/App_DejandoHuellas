<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Información de la Mascota</title>
    <link rel="stylesheet" href="https://unpkg.com/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        body {
            background-color: #BC9A7E;
            /* Color de fondo principal */
        }

        form input[type=date] {
            width: 100% !important;
        }

        form input[type=number] {
            height: 46px !important;
            padding: 10px !important;
        }

        .form-select {
            height: 46px !important;
        }

        .modal-content {
            max-width: 1220px !important;
        }

        .mascota-info {
            padding: 20px;
        }

        .mascota-info img {
            max-width: 300px;
            height: auto;
            display: block;
            margin: 0 auto;
            border-radius: 10px;
        }

        .card-custom {
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            background-color: #ffffff;
            /* Fondo blanco para la tarjeta */
        }

        .card-header-custom {
            background-color: #487B68;
            color: white;
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
            text-align: center;
        }

        .owner-info {
            text-align: center;
            background-color: #487B68;
            color: white;
            padding: 10px;
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
        }

        .contact-info {
            text-align: center;
            background-color: #487B68;
            color: white;
            padding: 10px;
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
        }

        .text-large {
            font-size: 1.3em;
            /* Ajusta el tamaño según tu necesidad */
        }

        .text-name {
            font-size: 5em;
        }

        .text-name-owner {
            font-size: 1.5em;
        }

        .text-especie {
            font-size: 1.7em;
        }

        a {
            text-decoration: none;
        }

        #contact-wa,
        #contact-map {
            background-color: #487B68;
            color: #fff;
            padding: 10px 20px;
            border-radius: 25px;
            margin-top: 10px;
            display: inline-block;
            text-align: left;
            text-decoration: none;
            /* Elimina el subrayado de enlace */
            margin-right: 10px;
            /* Espacio entre los botones */
        }

        .icon-space {
            margin-right: 8px;
            /* Ajusta el espacio entre el icono y el texto */
            vertical-align: middle;
            /* Alinea verticalmente el icono con el texto */
        }

        #loading-spinner {
            display: none;
            /* Inicialmente oculto */
            margin-top: 50px;
        }

        .leaflet-popup-close-button {
            display: none;
            /* Oculta el botón de cerrar del popup */
        }

        .map {
            height: 400px;
            width: 100%;

        }

        hr {
            border: 0;
            border-top: 1px solid #8b8a8a;
            margin: 20px 0;
        }

    

        #manual-map {
            height: 400px;
            /* Altura del mapa en el modal */
            width: 100%;
        }

        @media (min-width: 768px) {
            .modal-lg-custom {
                max-width: 80%;
            }

            #btn-agregar {
                width: 100% !important;
            }
        }
    </style>
</head>

<body>

    </div>
    <div class="container mt-5">
        <div id="loading-spinner" class="text-center">
            <div class="spinner-border text-light" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
        </div>
        <div class="card card-custom">
            <div class="owner-info">
                <p class="mb-0">Hola, ¿me ayudas a volver con mi amo? se llama:</p>
                <strong><span class="text-name-owner" id="propietario"></span></strong>

            </div>
            <div class="card-body mascota-info">
                <img id="foto" src="" alt="Foto de la mascota">
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="row text-center">
                            <p class="text-name pb-0"><strong id="nombre"></strong></p>
                        </div>
                        <div class="row text-center">
                            <p class="text-especie"><span id="especie"></span></p>
                        </div>
                        <div class="col-12 col-md-10 offset-md-1">
                            <p class="text-large"><strong>Género:</strong> <span id="genero"></span></p>
                            <p class="text-large"><strong>Fecha de Nacimiento:</strong> <span
                                    id="fecha_nacimiento"></span></p>
                            <p class="text-large"><strong>Color:</strong> <span id="color"></span></p>
                            <p class="text-large"><strong>Peso:</strong> <span id="peso"></span> lbs.</p>
                            <p class="text-large"><strong>Enfermedad Crónica:</strong> <span
                                    id="enfermedad_cronica"></span></p>

                        </div>

                    </div>

                </div>

                <hr>
                <div class="row-12 info-contacto">
                    <div class="col md-12 text-center mt-2">
                        <h2>Contactar a mi amo</h2>
                    </div>
                    <div class="col-12 col-md-10 offset-md-1">
                        <p class="text-large"><strong>Nombre:</strong> <span id="nombre_amo"></span></p>
                        <p class="text-large"><strong>Teléfono:</strong> <span id="telefono_amo"></span></p>
                        <p class="text-large"><strong>Correo:</strong> <span id="correo_amo"></span></p>
                        <p class="text-large"><strong>Es de:</strong> <span id="casa_amo"></span></p>

                    </div>
                    <div class=" col-md-10 offset-md-1">
                        <a id="contact-wa" href="" target="_blank">
                            <span class="icon-space">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="icon icon-tabler icons-tabler-outline icon-tabler-brand-whatsapp">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                    <path d="M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9" />
                                    <path
                                        d="M9 10a.5 .5 0 0 0 1 0v-1a.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a.5 .5 0 0 0 0 -1h-1a.5 .5 0 0 0 0 1" />
                                </svg>
                            </span>
                            Whatsapp
                        </a>
                        <a id="contact-map" data-bs-toggle="modal" data-bs-target="#ReporteAparicion">
                            <span class="icon-space">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="icon icon-tabler icons-tabler-outline icon-tabler-map-pin-exclamation">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                    <path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
                                    <path
                                        d="M15.005 19.31l-1.591 1.59a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 1 1 13.592 -4.638" />
                                    <path d="M19 16v3" />
                                    <path d="M19 22v.01" />
                                </svg>
                            </span>
                            Enviar Ubicación
                        </a>
                    </div>



                </div>

                <hr>
            </div>
            <div class="col md-12 text-center mt-2">
                <h2>Acá está mi casita</h2>
            </div>

            <div class="col md-12 p-4">
                <div id="map" class="map"></div>
            </div>

            <div>
            </div>

        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="ReporteAparicion" tabindex="-1" aria-labelledby="ReporteAparicionLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg modal-lg-custom">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ReporteAparicionLabel">Reporte de Aparición</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" id="btn-cerrar"
                        aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="regForm">

                        <h4>Ponerme en contacto</h4>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="fecha_reporte" class="form-label">Fecha del Reporte</label>
                                <input type="date" class="form-control" id="fecha_reporta" name="fecha_reporta" 
                                    required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="nombre_reporta" class="form-label">Nombre</label>
                                <input type="text" class="form-control" id="nombre_reporta" name="nombre_reporta" placeholder="Tu nombre"
                                    required>
                            </div>
                            <div class="col-md-6">
                                <label for="correo_reporta" class="form-label">Correo</label>
                                <input type="email" class="form-control" id="correo_reporta" name="correo_reporta"  placeholder="Tu correo"
                                    required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="telefono_reporta" class="form-label">Teléfono</label>
                                <input type="tel" class="form-control" id="telefono_reporta" name="telefono_reporta"  placeholder="Tu teléfono"
                                    required>
                            </div>
                        </div>

                        <div class="row">
                            <h3><strong> Esta es mi ubicación</strong></h3>
                            <p>Esta información es indispensable para que el dueño se ponga en contacto contigo.</p>
                            <div class="col-md-2">
                              <button type="button" onclick="sendLocation()" class="btn btn-primary">Mi ubicación actual</button>
                            </div>
                            <div class="col-md-3">
                              <button type="button" onclick="toggleManualLocation()" class="btn btn-primary">Elegir ubicación
                                manual</button>
                            </div>
                          </div>
                          <!-- Contenedor para mostrar la información de ubicación -->
                          <div class="row mt-3" id="locationInfo" style="display: none;">
              
                            <div class="col-md-6">
                              <label for="locationSearch">Buscar lugar:</label>
                              <input type="text" id="locationSearch" class="form-control" placeholder="Ingresa el nombre del lugar">
                              <button type="button" onclick="searchLocation()" class="btn btn-primary mt-2">Buscar</button>
                              <p>Para seleccionar tu ubicación, toca dos veces en el mapa.</p>
                            </div>
                            <div class="col-md-12">
                              <div id="manual-map" class="map"></div>
                            </div>
                          </div>

                        <!-- Botón de guardar -->
                        <div class="row justify-content-center mt-3">
                            <div class="col-12 col-md-2">
                                <button type="button" id="btn-enviar" class="btn btn-primary w-100">Enviar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>



    <script src="https://unpkg.com/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>

        document.addEventListener('DOMContentLoaded', function () {
            const identificador_qr = window.location.pathname.split('/').pop();
            const spinner = document.getElementById('loading-spinner');
            const card = document.querySelector('.card');
            const btnCerrar = document.getElementById('btn-cerrar');
            const btnEnviar = document.getElementById('btn-enviar');
            initializeMap();
            loadSavedLocations();
            inicializarCalendario();

            btnCerrar.addEventListener('click', () => {
            resetFormAndMap();
             
    });

    btnEnviar.addEventListener('click',()=>{
        event.preventDefault();
  
        const formData = {
            nombre_reporta: document.getElementById('nombre_reporta').value,
            correo_reporta: document.getElementById('correo_reporta').value,
            fecha_reporta: document.getElementById('fecha_reporta').value,
            telefono_reporta: document.getElementById('telefono_reporta').value,
            nombreUbicacion: placeName,
            latitud: latitude, 
            longitud: longitude,
            descripcion_adicional: description
        };

        console.log(formData)
    })

            // Mostrar el spinner y ocultar la tarjeta
            spinner.style.display = 'block';
            card.style.display = 'none';
            fetch(`/info/qr/${identificador_qr}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    const mascota = data[0]; // Acceder a la primera posición del arreglo
                    const mensaje = encodeURIComponent("Hola, me he encontrado con tu mascota. ");
                    if (mascota) {
                        const whatsappLink = `https://api.whatsapp.com/send/?phone=${mascota.telefono}&text=${mensaje}${mascota.nombre}`;
                        // Mostrar fecha de nacimiento y edad
                        const fechaNacimientoFormateada = new Date(mascota.fecha_nacimiento).toLocaleDateString();
                        const edad = calcularEdad(mascota.fecha_nacimiento);
                        document.getElementById('nombre_amo').textContent = mascota.propietario;
                        document.getElementById('telefono_amo').textContent = mascota.telefono;
                        document.getElementById('correo_amo').textContent = mascota.correo;
                        document.getElementById('casa_amo').textContent = mascota.residencia;
                        document.getElementById('nombre').textContent = mascota.nombre;
                        document.getElementById('especie').textContent = mascota.raza;
                        document.getElementById('genero').textContent = mascota.nombre_genero;
                        document.getElementById('fecha_nacimiento').textContent = `${fechaNacimientoFormateada} (${edad})`;
                        document.getElementById('color').textContent = mascota.color;
                        document.getElementById('peso').textContent = mascota.peso;
                        document.getElementById('enfermedad_cronica').textContent = mascota.enfermedad_cronica || 'N/A';
                        document.getElementById('propietario').textContent = mascota.propietario;
                        document.getElementById('contact-wa').href = whatsappLink;
                        // document.getElementById('correo').textContent = mascota.correo;
                        document.getElementById('foto').src = mascota.foto;
                        console.log(mascota);


                        // Ocultar el spinner y mostrar la tarjeta
                        spinner.style.display = 'none';
                        card.style.display = 'block';
                        // Convertir latitud y longitud a números
                        const latitud = parseFloat(mascota.latitud);
                        const longitud = parseFloat(mascota.longitud);

                        // Inicializar el mapa centrado en las coordenadas de la mascota
                        const map = L.map('map').setView([latitud, longitud], 15); // El número 15 es el nivel de zoom


                        // Agregar los mosaicos de OpenStreetMap
                        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                            attribution: '© OpenStreetMap contributors'
                        }).addTo(map);

                        // Agregar un marcador en las coordenadas de la mascota
                        const marker = L.marker([latitud, longitud]).addTo(map);

                        // Vincular un popup al marcador con el nombre y la descripción del lugar
                        marker.bindPopup(`<strong>${mascota.nombre_ubicacion}</strong><br>${mascota.descripcion_adicional}`).openPopup();
                        // Invalidar tamaño del mapa para asegurar su renderización correcta
                        map.invalidateSize();
                    } else {
                        document.body.innerHTML = '<p>Mascota no encontrada.</p>';
                    }



                })
                .catch(error => {
                    console.error('Error al obtener la mascota:', error);
                    document.body.innerHTML = '<p>Error al cargar la información de la mascota.</p>';
                });
 });
        // Función para calcular la edad
        function calcularEdad(fechaNacimiento) {
            const hoy = new Date();
            const nacimiento = new Date(fechaNacimiento);
            let edad = hoy.getFullYear() - nacimiento.getFullYear();
            const mes = hoy.getMonth() - nacimiento.getMonth();

            if (mes < 0 || (mes === 0 && hoy.getDate() < nacimiento.getDate())) {
                edad--;
            }
            if (edad === 1) {
                return (edad + ' año');
            }
            else {
                return (edad + ' años');
            }


        }

        function inicializarCalendario(){
             // Establecer la fecha actual en el campo de fecha del reporte
    const fechaInput = document.getElementById('fecha_reporta');
    const today = new Date();
    const formattedDate = today.toISOString().split('T')[0];
    fechaInput.value = formattedDate;
        }
        // Lógica de mapas
let manualMap, manualMarker;
const guatemalaCoords = [14.6349, -90.5069];

// Variables globales para latitud, longitud, nombre y descripción
let latitude, longitude, placeName, description;

function sendLocation() {
    resetFormAndMap();
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition, showError);
    } else {
        alert("Geolocalización no es soportada por este navegador.");
    }
}

function toggleManualLocation() {
    resetFormAndMap();
    const locationInfo = document.getElementById('locationInfo');
    if (locationInfo.style.display === 'none') {
        locationInfo.style.display = 'block';
        initializeMap();
    } else {
        locationInfo.style.display = 'none';
    }
}

        function initializeMap() {
    if (!manualMap) {
        manualMap = L.map('manual-map').setView(guatemalaCoords, 7);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(manualMap);
        manualMap.panBy([0, -110]);
        manualMap.on('dblclick', function (e) {
            const userConfirmed = confirm("¿Desea agregar un punto en esta ubicación?");
            if (userConfirmed) {
                if (manualMarker) {
                    manualMap.removeLayer(manualMarker);
                }
                manualMarker = L.marker(e.latlng).addTo(manualMap);
                latitude = e.latlng.lat; // Asignar latitud global
                longitude = e.latlng.lng; // Asignar longitud global
                placeName = prompt("Ingresa el nombre del lugar para tu ubicación:"); // Asignar nombre global
                if (placeName) {
                    description = prompt("Ingresa una descripción para tu ubicación:"); // Asignar descripción global
                    manualMarker.bindPopup(`<strong>${placeName}</strong><br>${description}`).openPopup();
                    manualMarker.on('popupclose', function () {
                        resetFormAndMap();
                    });
                    saveManualLocation(latitude, longitude, placeName, description);
                }
            }
        });
    } else {
        manualMap.setView(guatemalaCoords, 7);
        manualMap.panBy([0, -110]);
        manualMap.invalidateSize();
    }
}
function showPosition(position) {
    latitude = position.coords.latitude; // Asignar latitud global
    longitude = position.coords.longitude; // Asignar longitud global
    placeName = prompt("Ingresa el nombre del lugar para tu ubicación actual:"); // Asignar nombre global
    description = prompt("Ingresa una descripción para tu ubicación actual:"); // Asignar descripción global
    if (placeName && description) {
        const locationData = {
            latitude: latitude,
            longitude: longitude,
            name: placeName,
            description: description
        };
        const locations = JSON.parse(localStorage.getItem('locations')) || [];
        locations.push(locationData);
        localStorage.setItem('locations', JSON.stringify(locations));
        console.log(locationData);
        const locationInfo = document.getElementById('locationInfo');
        locationInfo.style.display = 'block';
        initializeMap();
        manualMap.setView([latitude, longitude], 15);
        if (manualMarker) {
            manualMap.removeLayer(manualMarker);
        }
        manualMarker = L.marker([latitude, longitude]).addTo(manualMap);
        manualMarker.bindPopup(`<strong>${placeName}</strong><br>${description}`).openPopup();
        manualMarker.on('popupclose', function () {
            resetFormAndMap();
        });
        document.getElementById('locationSearch').disabled = true;
        document.querySelector("button[onclick='searchLocation()']").disabled = true;
    } else {
        alert("Se requiere ingresar un nombre y una descripción para la ubicación.");
    }
}

function showError(error) {
    switch (error.code) {
        case error.PERMISSION_DENIED:
            alert("Permiso denegado por el usuario.");
            break;
        case error.POSITION_UNAVAILABLE:
            alert("Información de ubicación no disponible.");
            break;
        case error.TIMEOUT:
            alert("El tiempo de la solicitud ha expirado.");
            break;
        case error.UNKNOWN_ERROR:
            alert("Ocurrió un error desconocido.");
            break;
    }
}
function resetFormAndMap() {
    const locationInfo = document.getElementById('locationInfo');
    locationInfo.style.display = 'none';
    if (manualMarker) {
        manualMap.removeLayer(manualMarker);
        manualMarker = null;
    }
    manualMap.setView(guatemalaCoords, 7);
    document.getElementById('locationSearch').value = '';
    document.getElementById('locationSearch').disabled = false;
    document.querySelector("button[onclick='searchLocation()']").disabled = false;
    localStorage.removeItem('locations');
}
function searchLocation() {
    const locationName = document.getElementById('locationSearch').value;
    if (locationName) {
        const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(locationName)}`;
        fetch(url)
            .then(response => response.json())
            .then(data => {
                if (data.length > 0) {
                    const { lat, lon } = data[0];
                    manualMap.setView([lat, lon], 13);
                } else {
                    alert("No se encontró la ubicación. Inténtalo de nuevo.");
                }
            })
            .catch(error => {
                console.error('Error al buscar la ubicación:', error);
                alert("Ocurrió un error al buscar la ubicación.");
            });
    } else {
        alert("Por favor, ingresa el nombre de un lugar para buscar.");
    }
}

function saveManualLocation(latitude, longitude, name, descripcion) {
    const locationData = {
        latitude: latitude,
        longitude: longitude,
        name: name,
        descripcion: descripcion
    };
    const locations = JSON.parse(localStorage.getItem('locations')) || [];
    locations.push(locationData);
    localStorage.setItem('locations', JSON.stringify(locations));
    console.log(locationData);
}

function loadSavedLocations() {
    const locations = JSON.parse(localStorage.getItem('locations')) || [];
    locations.forEach(location => {
        const marker = L.marker([location.latitude, location.longitude]).addTo(manualMap);
        marker.bindPopup(location.name).openPopup();
    });
}



    </script>
</body>

</html>